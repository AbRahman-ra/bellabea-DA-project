# Create the scatter plot
ggplot(sleep_walk, aes(x = norm_sleepSD*100, y = normDistanceSD*100)) +
geom_point(color = "maroon") +
geom_smooth(color = "darkblue", fill = NA)+
scale_x_continuous(limits = c(0, 125), breaks = seq(0, 125, by = 25)) +
scale_y_continuous(limits = c(0, 150), breaks = seq(0, 150, by = 25)) +
labs(title = "Sleep Quality and Walking Habits",
x = "Inconsistency in Sleep Duration (%)",
y = "Inconsistency in Walking Distance (%)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_line(color = "orange")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "orange")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1, fill = NA)
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 2, fill = NA)
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA)
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA)+
scale_x_date(limits = c(as.Date(2016-04-17), as.Date(2023-01-16)), date_breaks = "1 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
labs(title = "Sleep Quality and Walking Habits",
x = "Inconsistency in Sleep Duration (%)",
y = "Inconsistency in Walking Distance (%)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")), date_breaks = "1 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
labs(title = "Sleep Quality and Walking Habits",
x = "Inconsistency in Sleep Duration (%)",
y = "Inconsistency in Walking Distance (%)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
labs(title = "Sleep Quality and Walking Habits",
x = "Month",
y = "Average Walking Distance (Km)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Sleep Quality and Walking Habits",
x = "Month",
y = "Average Walking Distance (Km)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Average Walking Pattern for User",
x = "Month",
y = "Average Walking Distance (Km)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA, n = 1000S)+
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA, n = 1000)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Average Walking Pattern for User",
x = "Month",
y = "Average Walking Distance (Km)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA, n = 1)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Average Walking Pattern for User",
x = "Month",
y = "Average Walking Distance (Km)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA, n = 2)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Average Walking Pattern for User",
x = "Month",
y = "Average Walking Distance (Km)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA, n = 3)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Average Walking Pattern for User",
x = "Month",
y = "Average Walking Distance (Km)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA, n = 2000)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Average Walking Pattern for User",
x = "Month",
y = "Average Walking Distance (Km)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA, n = 352)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Average Walking Pattern for User",
x = "Month",
y = "Average Walking Distance (Km)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, fill = NA, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Average Walking Pattern for User",
x = "Month",
y = "Average Walking Distance (Km)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Average Walking Pattern for User",
x = "Month",
y = "Average Walking Distance (Km)")
ggplot(data = uSteps_pivot, aes(x = week, y = normWeekDistSD)) +
geom_point(color = "darkgreen")+
geom_smooth(color = "gold", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Inconsistency")
ggplot(data = uSteps_pivot, aes(x = week, y = normWeekDistSD*100)) +
geom_point(color = "darkgreen")+
geom_smooth(color = "gold", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Inconsistency \"CoV\" (%)")
ggplot(data = uSteps_pivot, aes(x = week, y = normWeekDistSD*100)) +
geom_point(color = "darkgreen")+
geom_smooth(color = "gold", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 10)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Inconsistency \"CoV\" (%)")
ggplot(data = uSteps_pivot, aes(x = week, y = normWeekDistSD*100)) +
geom_point(color = "darkgreen")+
geom_smooth(color = "gold", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "3 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 25)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Inconsistency \"CoV\" (%)")
ggplot(data = uSteps_pivot, aes(x = week, y = normWeekDistSD*100)) +
geom_point(color = "darkgreen")+
geom_smooth(color = "gold", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "6 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 25)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Inconsistency \"CoV\" (%)")
ggplot(data = uSteps_pivot, aes(x = week, y = normWeekDistSD*100)) +
geom_point(color = "darkgreen")+
geom_smooth(color = "gold", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "6 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 25)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Walking Inconsistency (%)")
ggplot(data = uSleep_pivot, aes(x = week, y = norm_sleepSD*100)) +
geom_point(color = "darkblue")+
geom_smooth(color = "magenta", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "6 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 25)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Sleeping Inconsistency (%)")
ggplot(data = uSleep_pivot, aes(x = week, y = unorm_sleepSD*100)) +
geom_point(color = "darkblue")+
geom_smooth(color = "magenta", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "6 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 25)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Sleeping Inconsistency (%)")
uSleep_pivot$week <- as.Date(uSleep_pivot$week) # convert to Date format
ggplot(data = uSleep_pivot, aes(x = week, y = unorm_sleepSD*100)) +
geom_point(color = "darkblue")+
geom_smooth(color = "magenta", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "6 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 25)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Sleeping Inconsistency (%)")
ggplot(data = uSteps_pivot, aes(x = week, y = normWeekDistSD*100)) +
geom_point(color = "darkgreen")+
geom_smooth(color = "gold", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "6 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 25)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Walking Inconsistency (%)")
ggplot(data = uSleep_pivot, aes(x = week, y = unorm_sleepSD*100)) +
geom_point(color = "darkblue")+
geom_smooth(color = "magenta", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "6 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 25)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Sleeping Inconsistency (%)")
# Total steps walked every hour
ggplot(activH_pivot, aes(x = activityHour, y = tot_stepH, group = 1)) +
geom_smooth(stat = "identity", color = "turquoise", n = 20) +
geom_point(color = "purple") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Activity Hour vs Total Steps",
x = "Activity Hour",
y = "Total Steps")
library(lubridate)
install.packages("dplyr")
install.packages("readr")
install.packages("ggplot2")
install.packages("ggsci")
library(dplyr)
library(readr)
library(lubridate)
library(ggplot2)
library(ggsci)
wei_freq_pie
wei_freq_pie
# create a new column with time groups
freqtable$time_group <- cut(freqtable$time, breaks = c(-Inf, 6.5, 8, 24),
labels = c("23:59", "6:30-8:00", "Other"))
# calculate the frequencies for each time group
freq_by_time <- freqtable %>%
group_by(time_group) %>%
summarise(total_freq = sum(frequency))
# create a new column with time groups
freqtable$time_group <- cut(freqtable$time, breaks = c(-Inf, 6.5, 8, 24),
labels = c("23:59", "6:30-8:00", "Other"))
freqtable$time <- as.numeric(freqtable$time)
View(freqtable)
# Calculate weight recording time frequency
freqtable <- weight %>%
group_by(time) %>%
summarize(frequency = n())
freqtable$time <- as.POSIXlt(freqtable$time, format = "%H:%M:%S")
# create a new column with time groups
freqtable$time_group <- cut(freqtable$time, breaks = c(-Inf, 6.5, 8, 24),
labels = c("23:59", "6:30-8:00", "Other"))
freqtable$time <- as.POSIXct(freqtable$time, format = "%H:%M:%S")
freqtable$time <- format(as.POSIXct(freqtable$time), format = "%H:%M:%S")
# create a new column with time groups
freqtable$time_group <- cut(freqtable$time, breaks = c(-Inf, 6.5, 8, 24),
labels = c("23:59", "6:30-8:00", "Other"))
freqtable$time <- as.numeric(freqtable$time)
freqtable$time <- format(as.POSIXct(freqtable$time), format = "%H:%M:%S")
# Calculate total distance walked each hour
activH_pivot <- activityH %>%
group_by(activityHour) %>%
summarize(tot_stepH = sum(stepTotal))
freqtable$time <- format(as.POSIXct(freqtable$time), format = "%H:%M:%S")
# Calculate weight recording time frequency
freqtable <- weight %>%
group_by(time) %>%
summarize(frequency = n())
freqtable$time <- format(as.POSIXct(freqtable$time), format = "%H:%M:%S")
freqtable$time <- format(as.POSIXct(freqtable$time), format = "%H:%M:%S")
# create a new column with time groups
freqtable$time_group <- cut(freqtable$time, breaks = c(-Inf, 6.5, 8, 24),
labels = c("23:59", "6:30-8:00", "Other"))
typeof(freqtable$time)
freqtable$time <- as.POSIXct(freqtable$time, format = "%H:%M:%S")
typeof(freqtable$time)
freqtable$time <- format(time_posixct, format = "%H:%M:%S")
freqtable$time <- format(freqtable$time, format = "%H:%M:%S")
typeof(freqtable$time)
freqtable$time <- as.POSIXct(freqtable$time, format = "%H:%M:%S")
freqtable$time <- format(freqtable$time, format = "%H:%M:%S")
typeof(freqtable$time)
freqtable$time <- as.POSIXct(freqtable$time, format = "%H:%M:%S")
typeof(freqtable$time)
freqtable$time <- format(freqtable$time, format = "%H:%M:%S")
typeof(freqtable$time)
# calculate the frequencies for each time group
freq_by_time <- freqtable %>%
group_by(time_group) %>%
summarise(total_freq = sum(frequency))
# calculate the frequencies for each time group
freq_by_time <- freqtable %>%
group_by(time) %>%
summarise(total_freq = sum(frequency))
View(freq_by_time)
# create the pie chart
wei_freq_pie <- ggplot(freq_by_time, aes(x = "", y = total_freq, fill = time_group)) +
geom_col(width = 1, show.legend = FALSE) +
coord_polar("y", start=0) +
theme_void() +
labs(title = "When do people log their weights?", fill = "Time")
wei_freq_pie
# create the pie chart
wei_freq_pie <- ggplot(freq_by_time, aes(x = "", y = total_freq, fill = time)) +
geom_col(width = 1, show.legend = FALSE) +
coord_polar("y", start=0) +
theme_void() +
labs(title = "When do people log their weights?", fill = "Time")
wei_freq_pie
# create the pie chart
wei_freq_pie <- ggplot(freq_by_time, aes(x = "", y = total_freq, fill = time)) +
geom_col(width = 1) +
coord_polar("y", start=0) +
theme_void() +
labs(title = "When do people log their weights?", fill = "Time")
wei_freq_pie
# create a new column with time groups
freqtable$time_group <- cut(freqtable$time, breaks = c(-Inf, 6.5, 8, 24),
labels = c("23:59", "6:30-8:00", "Other"))
wei_freq
freqtable$time <- as.POSIXct(freqtable$time, format = "%H:%M:%S")
freqtable$time <- format(freqtable$time, format = "%H:%M:%S")
# First, weights data visualizations
# When do people log their weights?
wei_freq <- ggplot(freqtable, aes(x = time, y = frequency)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "When do people log their weights?", x = "Time", y = "Frequency")
wei_freq
# Weight loss for users
ggplot(data = weight_pivot, aes(x = as.character(id), y = tot_weight_lossKg, fill = num_days)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_gradient(low = "cyan", high = "green") +
scale_y_continuous(limits = c(-0.7, 1.9), breaks = seq(-0.7, 1.9, by = 0.2)) +
labs(title = "Weight Loss vs. Workout Days by User ID",
x = "User ID", y = "Total Weight Loss (Kg)") +
geom_text(aes(label = num_days, y = tot_weight_lossKg + 0.1), position = position_dodge(width = 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Total steps walked every hour
ggplot(activH_pivot, aes(x = activityHour, y = tot_stepH, group = 1)) +
geom_smooth(stat = "identity", color = "turquoise", n = 20) +
geom_point(color = "purple") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Activity Hour vs Total Steps",
x = "Activity Hour",
y = "Total Steps")
View(activH_pivot)
# Consistency of users (Total distance - active days - Coefficient of Variation)
ggplot(data = distance_pivot, aes(x = as.character(id), y = avg_distance, fill = normDistanceSD)) +
geom_bar(stat = "identity") +
scale_y_continuous(limits = c(0, 13.4), breaks = seq(0, 13.4, by = 2)) +
scale_fill_gradient(low = "turquoise", high = "darkblue") +
theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust = 1),
legend.position = "right",
legend.background = element_rect(fill = "white", colour = "black", size = 0.5, linetype = "solid"),
legend.title = element_text(size = 8, face = "bold", hjust = 0),
legend.text = element_text(size = 7, face = "bold")) +
labs(title = "Average distance covered by users",
x = "ID",
y = "Average Distance in km",
fill = "inconsistency (%)")
cPowerofHabit <- cor(distance_pivot$normDistanceSD, distance_pivot$tot_distance , use = "complete.obs")
ggplot(data = distance_pivot)+
geom_smooth(color = "maroon", fill = NA, aes(x = tot_distance, y = normDistanceSD*100))+
geom_point(aes(x = tot_distance, y = normDistanceSD*100), color = "darkgreen")+
scale_x_continuous(limits = c(0, 425), breaks = seq(0, 425, by = 50))+
scale_y_continuous(limits = c(0, 150), breaks = seq(0, 150, by = 25))+
labs(title = "The power of walking habit",
x = "Total Distance (km)",
y = "Inconsistency \"CoV\" (%)")
knitr::opts_chunk$set(echo = TRUE)
cPowerofHabit <- cor(distance_pivot$normDistanceSD, distance_pivot$tot_distance , use = "complete.obs")
cPowerofHabit2 <- cor(distance_pivot$normDistanceSD, distance_pivot$activDays , use = "complete.obs")
ggplot(data = distance_pivot)+
geom_smooth(color = "darkblue", fill = NA, aes(y = activDays, x = normDistanceSD*100))+
geom_point(aes(y = activDays, x = normDistanceSD*100), color = "darkorange")+
scale_y_continuous(limits = c(0, 31), breaks = seq(0, 31, by = 2))+
scale_x_continuous(limits = c(0, 150), breaks = seq(0, 150, by = 25))+
labs(title = "The power of walking habit - 2",
y = "Nymber of Active Days",
x = "Inconsistency \"CoV\" (%)")
# Create the scatter plot
ggplot(sleep_walk, aes(x = norm_sleepSD*100, y = normDistanceSD*100)) +
geom_point(color = "maroon") +
geom_smooth(color = "darkblue", fill = NA)+
scale_x_continuous(limits = c(0, 125), breaks = seq(0, 125, by = 25)) +
scale_y_continuous(limits = c(0, 150), breaks = seq(0, 150, by = 25)) +
labs(title = "Sleep Quality and Walking Habits",
x = "Inconsistency in Sleep Duration (%)",
y = "Inconsistency in Walking Distance (%)")
# User Data
ggplot(data = uSteps_pivot, aes(x = week, y = avg_weekDistKm)) +
geom_point(color = "maroon")+
geom_smooth(color = "navy", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "6 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 20), breaks = seq(0, 20, by = 2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Average Walking Pattern for User",
x = "Month",
y = "Average Walking Distance (Km)")
ggplot(data = uSteps_pivot, aes(x = week, y = normWeekDistSD*100)) +
geom_point(color = "darkgreen")+
geom_smooth(color = "gold", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "6 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 25)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Walking Inconsistency (%)")
ggplot(data = uSleep_pivot, aes(x = week, y = unorm_sleepSD*100)) +
geom_point(color = "darkblue")+
geom_smooth(color = "magenta", size = 1.5, n = 300)+
scale_x_date(limits = c(as.Date("2016-04-17"), as.Date("2023-01-16")),
date_breaks = "6 month", date_labels = "%b %Y") +
scale_y_continuous(limits = c(0, 250), breaks = seq(0, 250, by = 25)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "How inconsistency changes by time?",
x = "Month",
y = "Sleeping Inconsistency (%)")
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
tinytex::install_tinytex()
tinytex::install_tinytex()
tinytex::install_tinytex()
install.packages('tinytex')
tinytex::install_tinytex()
install.packages("tinytex")
tinytex::install_tinytex()
# Total steps walked every hour
ggplot(activH_pivot, aes(x = activityHour, y = tot_stepH, group = 1)) +
geom_smooth(stat = "identity", color = "turquoise", n = 20) +
geom_point(color = "purple") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
labs(title = "Activity Hour vs Total Steps",
x = "Activity Hour",
y = "Total Steps")
